

%%Circle params
RR = 1;



%%Ellipse points
% xx1 = 3;
% xx2 = 2.3569;
% xx3 = 1.0005;
% xx4 = 1.0635;
xxs = x(1,1:4);

% yy1 = 1;
% yy2 = 2.8683;
% yy3 = 1.0635;
% yy4 = 0.4365;
yys = x(2,1:4);

% plot(xxs, yys, LineStyle="none", Marker=".")
% axis padded

syms x1 y1 x2 y2 x3 y3 x4 y4 x5 y5 x6 y6 R xc yc a b A B C D

eqn1 = (((x1-xc)/a)^2+((y1-yc)/b)^2)/R^2==1;
eqn2 = (((x2-xc)/a)^2+((y2-yc)/b)^2)/R^2==1;
% eqn3 = (((x3-xc)/a)^2+((y3-yc)/b)^2)/R^2==1;
% eqn4 = (((x4-xc)/a)^2+((y4-yc)/b)^2)/R^2==1;
% eqn5 = (((x5-xc)/a)^2+((y5-yc)/b)^2)/R^2==1;

 % eqn1 = (((x1-xc)*(A) + (y1-yc)*(A))/a)^2 + (((x1-xc)*(A) + (y1-yc)*(A))/b)^2 == 1;
 % eqn2 = (((x2-xc)*(A) + (y2-yc)*(A))/a)^2 + (((x2-xc)*(A) + (y2-yc)*(A))/b)^2 == 1;
 % eqn3 = (((x3-xc)*(A) + (y3-yc)*(A))/a)^2 + (((x3-xc)*(A) + (y3-yc)*(A))/b)^2 == 1;
 % eqn4 = (((x4-xc)*(A) + (y4-yc)*(A))/a)^2 + (((x4-xc)*(A) + (y4-yc)*(A))/b)^2 == 1;
% eqn5 = (((x5-xc)*cos(A) + (y5-yc)*sin(A))/a)^2 + (((x5-xc)*sin(A) + (y5-yc)*cos(A))/b)^2 == 1;
% %eqn6 = (((x6-xc)*cos(A) + (y6-yc)*sin(A))/a)^2 + (((x6-xc)*sin(A) + (y6-yc)*cos(A))/b)^2 == 1;
%eqn7 = (((x7-xc)*cos(A) + (y7-yc)*sin(A))/a)^2 + (((x7-xc)*sin(A) + (y7-yc)*cos(A))/b)^2 == 1;

%% Rovnice Ax^2 + Bxy + Cx^2 = D

eqn1 = A*(x1-xc)^2 + B*(x1-xc)*(y1) + C*(y1)^2  == 1;
eqn2 = A*(x2-xc)^2 + B*(x2-xc)*(y2) + C*(y2)^2  == 1;
eqn3 = A*(x3-xc)^2 + B*(x3-xc)*(y3) + C*(y3-yc)^2  == 1;
eqn4 = A*(x4-xc)^2 + B*(x4-xc)*(y4) + C*(y4-yc)^2  == 1;
eqn5 = A*(x5-xc)^2 + B*(x5-xc)*(y5) + C*(y5-yc)^2  == 1;
eqn6 = A*(x6-xc)^2 + B*(x6-xc)*(y6-yc) + C*(y6-yc)^2 == D;



eqns = [eqn1 eqn2 eqn3 eqn4 eqn5];

% [xx yy AA BB CC ] = solve(eqns, [xc yc A B C])

% x1 = -2;
% x2 = 0;
% x3 = 2;
% x4 = 0;
% 
% y1 = 0;
% y2 = -1;
% y3 = 0;
% y4 = 1;

%R = 2;

% (x1^2*y2 - x1^2*y3 - x2^2*y1 + x2^2*y3 + x3^2*y1 - x3^2*y2 + y1^2*y2 - y1^2*y3 - y1*y2^2 + y1*y3^2 + y2^2*y3 - y2*y3^2)/(2*(x1*y2 - x2*y1 - x1*y3 + x3*y1 + x2*y3 - x3*y2))
% (- x1^2*x2 + x1^2*x3 + x1*x2^2 - x1*x3^2 + x1*y2^2 - x1*y3^2 - x2^2*x3 + x2*x3^2 - x2*y1^2 + x2*y3^2 + x3*y1^2 - x3*y2^2)/(2*(x1*y2 - x2*y1 - x1*y3 + x3*y1 + x2*y3 - x3*y2))
% ((x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2)*(x1^4*x2^2 - 2*x1^4*x2*x3 + x1^4*x3^2 + x1^4*y2^2 - 2*x1^4*y2*y3 + x1^4*y3^2 - 2*x1^3*x2^3 + 2*x1^3*x2^2*x3 + 2*x1^3*x2*x3^2 - 2*x1^3*x2*y2^2 + 4*x1^3*x2*y2*y3 - 2*x1^3*x2*y3^2 - 2*x1^3*x3^3 - 2*x1^3*x3*y2^2 + 4*x1^3*x3*y2*y3 - 2*x1^3*x3*y3^2 + x1^2*x2^4 + 2*x1^2*x2^3*x3 - 6*x1^2*x2^2*x3^2 + 2*x1^2*x2^2*y1^2 - 2*x1^2*x2^2*y1*y2 - 2*x1^2*x2^2*y1*y3 + 2*x1^2*x2^2*y2^2 - 2*x1^2*x2^2*y2*y3 + 2*x1^2*x2^2*y3^2 + 2*x1^2*x2*x3^3 - 4*x1^2*x2*x3*y1^2 + 4*x1^2*x2*x3*y1*y2 + 4*x1^2*x2*x3*y1*y3 + 2*x1^2*x2*x3*y2^2 - 8*x1^2*x2*x3*y2*y3 + 2*x1^2*x2*x3*y3^2 + x1^2*x3^4 + 2*x1^2*x3^2*y1^2 - 2*x1^2*x3^2*y1*y2 - 2*x1^2*x3^2*y1*y3 + 2*x1^2*x3^2*y2^2 - 2*x1^2*x3^2*y2*y3 + 2*x1^2*x3^2*y3^2 + 2*x1^2*y1^2*y2^2 - 4*x1^2*y1^2*y2*y3 + 2*x1^2*y1^2*y3^2 - 2*x1^2*y1*y2^3 + 2*x1^2*y1*y2^2*y3 + 2*x1^2*y1*y2*y3^2 - 2*x1^2*y1*y3^3 + x1^2*y2^4 - 2*x1^2*y2^3*y3 + 2*x1^2*y2^2*y3^2 - 2*x1^2*y2*y3^3 + x1^2*y3^4 - 2*x1*x2^4*x3 + 2*x1*x2^3*x3^2 - 2*x1*x2^3*y1^2 + 4*x1*x2^3*y1*y3 - 2*x1*x2^3*y3^2 + 2*x1*x2^2*x3^3 + 2*x1*x2^2*x3*y1^2 + 4*x1*x2^2*x3*y1*y2 - 8*x1*x2^2*x3*y1*y3 - 4*x1*x2^2*x3*y2^2 + 4*x1*x2^2*x3*y2*y3 + 2*x1*x2^2*x3*y3^2 - 2*x1*x2*x3^4 + 2*x1*x2*x3^2*y1^2 - 8*x1*x2*x3^2*y1*y2 + 4*x1*x2*x3^2*y1*y3 + 2*x1*x2*x3^2*y2^2 + 4*x1*x2*x3^2*y2*y3 - 4*x1*x2*x3^2*y3^2 - 2*x1*x2*y1^2*y2^2 + 4*x1*x2*y1^2*y2*y3 - 2*x1*x2*y1^2*y3^2 + 4*x1*x2*y1*y2^2*y3 - 8*x1*x2*y1*y2*y3^2 + 4*x1*x2*y1*y3^3 - 2*x1*x2*y2^2*y3^2 + 4*x1*x2*y2*y3^3 - 2*x1*x2*y3^4 - 2*x1*x3^3*y1^2 + 4*x1*x3^3*y1*y2 - 2*x1*x3^3*y2^2 - 2*x1*x3*y1^2*y2^2 + 4*x1*x3*y1^2*y2*y3 - 2*x1*x3*y1^2*y3^2 + 4*x1*x3*y1*y2^3 - 8*x1*x3*y1*y2^2*y3 + 4*x1*x3*y1*y2*y3^2 - 2*x1*x3*y2^4 + 4*x1*x3*y2^3*y3 - 2*x1*x3*y2^2*y3^2 + x2^4*x3^2 + x2^4*y1^2 - 2*x2^4*y1*y3 + x2^4*y3^2 - 2*x2^3*x3^3 - 2*x2^3*x3*y1^2 + 4*x2^3*x3*y1*y3 - 2*x2^3*x3*y3^2 + x2^2*x3^4 + 2*x2^2*x3^2*y1^2 - 2*x2^2*x3^2*y1*y2 - 2*x2^2*x3^2*y1*y3 + 2*x2^2*x3^2*y2^2 - 2*x2^2*x3^2*y2*y3 + 2*x2^2*x3^2*y3^2 + x2^2*y1^4 - 2*x2^2*y1^3*y2 - 2*x2^2*y1^3*y3 + 2*x2^2*y1^2*y2^2 + 2*x2^2*y1^2*y2*y3 + 2*x2^2*y1^2*y3^2 - 4*x2^2*y1*y2^2*y3 + 2*x2^2*y1*y2*y3^2 - 2*x2^2*y1*y3^3 + 2*x2^2*y2^2*y3^2 - 2*x2^2*y2*y3^3 + x2^2*y3^4 - 2*x2*x3^3*y1^2 + 4*x2*x3^3*y1*y2 - 2*x2*x3^3*y2^2 - 2*x2*x3*y1^4 + 4*x2*x3*y1^3*y2 + 4*x2*x3*y1^3*y3 - 2*x2*x3*y1^2*y2^2 - 8*x2*x3*y1^2*y2*y3 - 2*x2*x3*y1^2*y3^2 + 4*x2*x3*y1*y2^2*y3 + 4*x2*x3*y1*y2*y3^2 - 2*x2*x3*y2^2*y3^2 + x3^4*y1^2 - 2*x3^4*y1*y2 + x3^4*y2^2 + x3^2*y1^4 - 2*x3^2*y1^3*y2 - 2*x3^2*y1^3*y3 + 2*x3^2*y1^2*y2^2 + 2*x3^2*y1^2*y2*y3 + 2*x3^2*y1^2*y3^2 - 2*x3^2*y1*y2^3 + 2*x3^2*y1*y2^2*y3 - 4*x3^2*y1*y2*y3^2 + x3^2*y2^4 - 2*x3^2*y2^3*y3 + 2*x3^2*y2^2*y3^2 + y1^4*y2^2 - 2*y1^4*y2*y3 + y1^4*y3^2 - 2*y1^3*y2^3 + 2*y1^3*y2^2*y3 + 2*y1^3*y2*y3^2 - 2*y1^3*y3^3 + y1^2*y2^4 + 2*y1^2*y2^3*y3 - 6*y1^2*y2^2*y3^2 + 2*y1^2*y2*y3^3 + y1^2*y3^4 - 2*y1*y2^4*y3 + 2*y1*y2^3*y3^2 + 2*y1*y2^2*y3^3 - 2*y1*y2*y3^4 + y2^4*y3^2 - 2*y2^3*y3^3 + y2^2*y3^4))^(1/2)/(2*(x1^2*y2^2 - 2*x1^2*y2*y3 + x1^2*y3^2 - 2*x1*x2*y1*y2 + 2*x1*x2*y1*y3 + 2*x1*x2*y2*y3 - 2*x1*x2*y3^2 + 2*x1*x3*y1*y2 - 2*x1*x3*y1*y3 - 2*x1*x3*y2^2 + 2*x1*x3*y2*y3 + x2^2*y1^2 - 2*x2^2*y1*y3 + x2^2*y3^2 - 2*x2*x3*y1^2 + 2*x2*x3*y1*y2 + 2*x2*x3*y1*y3 - 2*x2*x3*y2*y3 + x3^2*y1^2 - 2*x3^2*y1*y2 + x3^2*y2^2))
% ((x1*y2*y3^2 - x1*y2^2*y3 - x2*y1*y3^2 + x2*y1^2*y3 + x3*y1*y2^2 - x3*y1^2*y2 - x1*y2*y4^2 + x1*y2^2*y4 + x2*y1*y4^2 - x2*y1^2*y4 - x4*y1*y2^2 + x4*y1^2*y2 + x1*y3*y4^2 - x1*y3^2*y4 - x3*y1*y4^2 + x3*y1^2*y4 + x4*y1*y3^2 - x4*y1^2*y3 - x2*y3*y4^2 + x2*y3^2*y4 + x3*y2*y4^2 - x3*y2^2*y4 - x4*y2*y3^2 + x4*y2^2*y3)/(x1*x2^2*y3 - x1*x3^2*y2 + x2*x3^2*y1 - x1^2*x2*y3 + x1^2*x3*y2 - x2^2*x3*y1 - x1*x2^2*y4 + x1*x4^2*y2 - x2*x4^2*y1 + x1^2*x2*y4 - x1^2*x4*y2 + x2^2*x4*y1 + x1*x3^2*y4 - x1*x4^2*y3 + x3*x4^2*y1 - x1^2*x3*y4 + x1^2*x4*y3 - x3^2*x4*y1 - x2*x3^2*y4 + x2*x4^2*y3 - x3*x4^2*y2 + x2^2*x3*y4 - x2^2*x4*y3 + x3^2*x4*y2))^(1/2)


vars = [x1, x2, x3, x4, y1, y2, y3, y4];

xxs = x(1,1:4);
yys = x(2,1:4);
tic
xcenter = double(subs(xx(1,:), vars, [xxs yys]));
toc
ycenter = double(subs(yy(1,:), vars, [xxs yys]));
toc
aaxis = double(subs(aa(1,:), vars, [xxs yys]));
toc
baxis = double(subs(bb(1,:), vars, [xxs yys]));
toc
radius = double(subs(RR(1,:), vars, [xxs yys]));
toc
figure(6)

f1 = @(x,y) (x-xcenter).^2/aaxis^2 + (y-ycenter).^2/baxis^2-radius;
fimplicit(f1, 'b');
hold on
plot([xxs], [yys], LineStyle="none", Marker="o")
hold off
grid on;
xlim([-10 10])
ylim([-10 10])


